{"version":3,"sources":["fetchBets.js","oddsFormat.js","postBets.js","slipBets.js","App.jsx","Bet.jsx","Bets.jsx","Flash.jsx","Logo.jsx","Options.jsx","PostedBet.jsx","PostedBets.jsx","Slip.jsx","SlipBet.jsx","actionTypes.js","BetsContainer.js","OptionsContainer.js","SlipContainer.js","helpers.js","initialize.js","bets.js","index.js","postedBets.js","status.js"],"names":[],"mappings":"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","file":"public/app.js","sourcesContent":["import { FETCH_BETS_REQUEST, FETCH_BETS_ERROR, FETCH_BETS_SUCCESS } from '../constants/actionTypes'\nimport { checkStatus, parseJSON } from '../helpers'\nimport 'whatwg-fetch'\n\nfunction fetchBetsRequest() {\n  return {\n    type: FETCH_BETS_REQUEST\n  }\n}\n\nexport function fetchBets(url = 'https://bedefetechtest.herokuapp.com/v1/markets') {\n  return (dispatch) => {\n    dispatch(fetchBetsRequest)\n    // return fetch(url)\n    //       .then(checkStatus)\n    //       .then(parseJSON)\n    // In development (or an environment with a no internet),\n    // comment out above three lines, and uncomment these two:\n    return Promise.resolve(JSON.stringify([{\"bet_id\":1,\"event\":\"Next World Cup\",\"name\":\"England\",\"odds\":{\"numerator\":10,\"denominator\":1}},{\"bet_id\":2,\"event\":\"Next World Cup\",\"name\":\"Brazil\",\"odds\":{\"numerator\":2,\"denominator\":1}},{\"bet_id\":3,\"event\":\"Next World Cup\",\"name\":\"Spain\",\"odds\":{\"numerator\":3,\"denominator\":1}},{\"bet_id\":4,\"event\":\"Next World Cup\",\"name\":\"Germany\",\"odds\":{\"numerator\":1,\"denominator\":1}},{\"bet_id\":5,\"event\":\"Ryder Cup\",\"name\":\"Europe\",\"odds\":{\"numerator\":7,\"denominator\":4}},{\"bet_id\":6,\"event\":\"Ryder Cup\",\"name\":\"USA\",\"odds\":{\"numerator\":9,\"denominator\":2}}]))\n          .then(response => JSON.parse(response))\n          .then(response => dispatch(fetchBetsSuccess(response)))\n          .catch(error => dispatch(fetchBetsError(error)))\n  }\n}\n\nexport function fetchBetsError(message = 'Sorry, there was an error loading.') {\n  return {\n    type: FETCH_BETS_ERROR,\n    message\n  }\n}\n\nexport function fetchBetsSuccess(bets) {\n  return {\n    type: FETCH_BETS_SUCCESS,\n    bets\n  }\n}\n","import { VIEW_AS_DECIMAL, VIEW_AS_FRACTIONAL } from '../constants/actionTypes'\nimport { viewAsFractional, viewAsDecimal } from '../actions/oddsFormat'\n\nexport default function oddsFormat(state = 'FRACTIONAL', action) {\n  switch(action.type) {\n    case VIEW_AS_DECIMAL:\n      return 'DECIMAL'\n    case VIEW_AS_FRACTIONAL:\n      return 'FRACTIONAL'\n    default:\n      return state\n  }\n}\n","import { POST_BET_REQUEST, POST_BET_ERROR, POST_BET_SUCCESS, POST_BET_REQUEST_COMPLETE } from '../constants/actionTypes'\nimport { checkStatus, parseJSON } from '../helpers'\nimport { unsetSlipBet } from './slipBets'\nimport 'whatwg-fetch'\n\nfunction postBetRequest(id) {\n  return {\n    type: POST_BET_REQUEST,\n    id\n  }\n}\n\n/**\n * The bets are held in the app state in the form of a Map.\n * Convert to an array of objects, which can then be parsed to JSON for POSTing.\n */\nfunction preparePostData(slipBets) {\n  return [...slipBets.keys()].map(betID => {\n    return {\n      'bet_id': slipBets.getIn([betID, 'bet_id']),\n      'odds': {\n        'numerator': slipBets.getIn([betID, 'odds', 'numerator']),\n        'denominator': slipBets.getIn([betID, 'odds', 'denominator'])\n      },\n      'stake': slipBets.getIn([betID, 'stake'])\n    }\n  })\n}\n\nexport function postBets(bets, url = 'https://bedefetechtest.herokuapp.com/v1/bets') {\n  return (dispatch) => {\n    const betsArr = preparePostData(bets)\n\n    for (let bet of betsArr) {\n      let id = bet['bet_id']\n      dispatch(postBetRequest(id))\n      return fetch(url, { method: 'post', headers: { 'Content-type': 'application/json' }, body: JSON.stringify(bet) })\n            .then(checkStatus)\n            .then(response => {\n              // dispatch(postBetSuccess(id, response))\n              // NOTE: not body for success/error, just faking the response\n              const fakeResponse = { ...bet, transaction_id: `${Math.floor(Math.random() * (9999 - 1000)) + 1000}` }\n              console.log(fakeResponse)\n              dispatch(postBetSuccess(id, fakeResponse))\n              dispatch(unsetSlipBet(id))\n            })\n            .catch(error => dispatch(postBetError(id, error)))\n    }\n  }\n}\n\nexport function postBetError(id, message = 'Sorry, there was an error posting.') {\n  return {\n    type: POST_BET_ERROR,\n    id,\n    message\n  }\n}\n\nexport function postBetSuccess(id, parsedResponse) {\n  return {\n    type: POST_BET_SUCCESS,\n    id,\n    parsedResponse\n  }\n}\n","import Immutable from 'immutable'\nimport { SET_SLIP_BET, UNSET_SLIP_BET, CLEAR_SLIP_BETS, SET_STAKE, POST_BETS_SUCCESS } from '../constants/actionTypes'\nimport { payoutCalculator } from '../helpers'\n\nfunction addSlipProps(betMap) {\n  return betMap.set('stake', 0).set('payout', 0)\n}\n\nexport default function slipBets(state = Immutable.Map(), action) {\n  switch(action.type) {\n    case SET_SLIP_BET:\n      return state.set(action.id, addSlipProps(action.value))\n    case UNSET_SLIP_BET:\n      return state.delete(action.id)\n    case CLEAR_SLIP_BETS:\n      return state.clear()\n    case POST_BETS_SUCCESS:\n      return state.delete(action.id)\n    case SET_STAKE:\n      const num = state.getIn([action.id, 'odds', 'numerator'])\n      const den = state.getIn([action.id, 'odds', 'denominator'])\n      return state.setIn([action.id, 'stake'], action.value)\n                  .setIn([action.id, 'payout'], payoutCalculator(action.value, num, den))\n    default:\n      return state\n  }\n}\n","import React from 'react'\nimport OptionsContainer from '../containers/OptionsContainer'\nimport BetsContainer from '../containers/BetsContainer'\nimport SlipContainer from '../containers/SlipContainer'\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <div className=\"betting-app__main__wrapper\">\n        <OptionsContainer />\n        <main className=\"betting-app__main\">\n          <BetsContainer />\n          <SlipContainer />\n        </main>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport { oddsFormatter } from '../helpers'\n\nexport default function Bet({ bet, oddsFormat, onSetSlipBetClick }) {\n  const odds = oddsFormatter(oddsFormat, bet.getIn(['odds', 'numerator']), bet.getIn(['odds', 'denominator']))\n  return (\n    <li className=\"bet bet--available\" onClick={ onSetSlipBetClick }>\n      <p className=\"bet__text\">\n        <strong className=\"bet__name\">{ bet.get('name') }</strong> to win the <strong className=\"bet__event\">{ bet.get('event') }</strong> at <strong className=\"bet__odds\">{ odds }</strong>\n      </p>\n    </li>\n  )\n}\n","import React from 'react'\nimport Bet from './Bet'\n\nexport default function Bets({ bets, status, oddsFormat, onLoadBetsClick, onSetSlipBetClick }) {\n  const betDisplay = do {\n    if(status.get('loading')) {\n      (<li>Bets loading...</li>)\n    } else if(status.get('loadError')) {\n      (<li>There was an error loading the bets, please refresh and try again.</li>)\n    } else {\n      bets.keySeq().map(betID => (\n        <Bet\n          key={ betID }\n          bet={ bets.get(betID) }\n          oddsFormat={ oddsFormat }\n          onSetSlipBetClick={ () => onSetSlipBetClick(betID, bets.get(betID)) }\n        />\n      ))\n    }\n  }\n\n  return (\n    <section className=\"betting-app__main-section betting-app__bets\">\n      <ul className=\"bets\">\n        { betDisplay }\n      </ul>\n      { do { if(!status.get('loaded')) {(\n        <div className=\"btn__group bet__controls\">\n           <button className=\"btn bet__control\" onClick={ onLoadBetsClick }>Load Bets</button>\n        </div>\n      )}}}\n    </section>\n  )\n}\n","import React from 'react'\n\n/**\n * THIS IS AN AWFUL HACK\n * Functionality for the flash has been effectively hardcoded to\n * give the bare minimum functionality. Based on whether a POST is\n * successful or in error, this displays an appropriate message.\n */\nexport default function Flash({ status }) {\n  if(status.get('posted')) {\n    return (\n      <p className=\"flash flash--success\">Bet successfully made!</p>\n    )\n  } else if(status.get('postError')) {\n    return (\n      <p className=\"flash flash--error\">There was an error attempting to submit your bet.</p>\n    )\n  } else {\n    return (\n      <p>&nbsp;</p>\n    )\n  }\n}\n","import React from 'react'\n\nexport default function Logo() {\n  return (\n    <svg className=\"logo\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 293.17 100.77\">\n      <title>Bede Logo</title>\n      <g>\n        <path d=\"M63.21,58.26l0.54,0.09a4.46,4.46,0,0,0,.49-0.73c2.67-6.39,5.1-12.89,9.31-18.52a2.4,2.4,0,0,0-.35-2.23,50.35,50.35,0,0,0-6.4-6.42,65.1,65.1,0,0,0-8.55-5.19c-2.13-1.16-4.34-2.66-6.64-2.94-6.55-.79-13.18-1.25-19.75,0a35.29,35.29,0,0,0-6.48,2,41.48,41.48,0,0,0-4.11,2.48c-0.64.35-1.62,0.8-2.09,0.55a2.68,2.68,0,0,1-.73-2c0-8,0-16,0-24.07H1.06c0,1.07,0,2,0,3,0,18.8-.12,37.6.09,56.39C1.2,65,2.35,69.35,3,73.74a1.41,1.41,0,0,0,.18.44C5.23,78,7,81.9,9.4,85.48A31.44,31.44,0,0,0,23.08,96.82c1.43,0.65,3,1,4.4,1.71,4,1.91,8.42,2.52,12.76,3a13,13,0,0,0,7.58-1.11c2.34-1.15,5.35-.35,7.88-1.94s5.73-2.21,8.05-4c6.08-4.68,11.45-10.19,15-17.09,3-5.93,5.49-12.14,8.22-18.22,3-6.59,6.37-12.92,12.54-17.07,2.48-1.66,5.34-3.37,8.19-3.7a25.52,25.52,0,0,1,11.44.91c6.27,2.12,10,6.63,13.67,11.48,0.94,1.24.24,2.37-1.33,2.36C120.1,53.14,108.74,53,97.39,53c-1,0-2.62.28-3,1-1.92,3.59-3.56,7.33-5.24,11-1.51,3.34-2.83,6.78-4.46,10.06s-3.52,6.42-5.35,9.72a24.88,24.88,0,0,0,2,2.12c3.35,2.87,6.6,5.89,10.18,8.45a27.51,27.51,0,0,0,7.31,3.4,98.06,98.06,0,0,0,10.69,2.85c4,0.84,7.73-.7,11.53-1.56a55.08,55.08,0,0,0,7.37-1.83,23.32,23.32,0,0,0,4.74-3.05c2.45-1.71,4.93-3.41,7.24-5.29a2.4,2.4,0,0,0,.07-2.32c-3.55-2.86-7.18-5.63-10.93-8.22a3.88,3.88,0,0,0-3.22-.17c-2.32,1-4.47,2.44-6.71,3.68-4.34,2.41-9.16,1.81-13.43.75-5.81-1.45-10.44-5.39-13.82-10.48a4.51,4.51,0,0,1-.49-2.89c0-.34,1.31-0.64,2-0.73a28.33,28.33,0,0,1,3.35-.08q21.72,0,43.43-.07c2.67,0,3.58.75,3.83,3.31a3.76,3.76,0,0,0,.32,1.38c2.09,3.93,4,8,6.38,11.73,3,4.82,7.86,7.84,12.51,10.9,1.54,1,3.67,1.07,5.37,1.89,4,1.91,8.32,2.4,12.57,3a13.06,13.06,0,0,0,7.92-1.07c2.36-1.17,5.38-.44,7.9-2,2.68-1.65,5.89-2.53,8.38-4.39A49.58,49.58,0,0,0,218.7,80.43a89.15,89.15,0,0,0,5.2-9.79c1.42-3.13,2.22-6.55,3.72-9.63,1.81-3.73,4.09-7.23,6.1-10.87a24.13,24.13,0,0,1,14.81-11.59,20.9,20.9,0,0,1,15.07,1.74c4.6,2.31,7.91,6.18,10.8,10.36a2.39,2.39,0,0,1,.2,2,2.16,2.16,0,0,1-1.65.55c-11.43-.06-22.87-0.18-34.3-0.22a3.12,3.12,0,0,0-2.34.8,62,62,0,0,0-3.78,7.35c-1.33,3.1-2.2,6.4-3.65,9.43a70.74,70.74,0,0,1-6.26,11.26c-1.91,2.62-1,3.91.92,5.49a23.06,23.06,0,0,1,2,2c5.8,6.11,12.66,10.18,21.22,11a3.16,3.16,0,0,1,1.37.38c3.33,2.11,7,1.13,10.4.71s6.61-2,9.9-3.05c1.72-.56,3.63-0.82,5.09-1.78,2.93-1.92,5.64-4.19,8.39-6.37,1.22-1,1.48-1.82-.14-3-3.42-2.38-6.65-5-10-7.54a3.45,3.45,0,0,0-4.67,0c-2.35,1.7-5,3.71-7.7,4-4.36.54-8.8,0.93-13.32-.87-5.3-2.11-9-5.77-12.24-10-1.33-1.72-.47-3.21,1.7-3.34,1-.06,1.92-0.07,2.88-0.07q26.27,0.1,52.54.17a2,2,0,0,0,1.56-.76,17.66,17.66,0,0,0,1.5-4.75A24.13,24.13,0,0,0,292.66,53c-1-2.62-.87-5.71-2.14-8.13a61.9,61.9,0,0,0-7.36-10.94A28.41,28.41,0,0,0,271,25.35c-2.82-1-5.53-2.57-8.42-3a47.43,47.43,0,0,0-16.41-.08,37.11,37.11,0,0,0-7.79,1.91c-2.53,1.08-4.75,2.9-7.13,4.36-7.63,4.72-12.3,12-16.45,19.59-2.62,4.77-4.41,10-6.5,15.07a44.13,44.13,0,0,1-10,15.12c-2.74,2.66-6,5-9.57,5.52-6,.82-12.16,1-17.73-2.89-5.18-3.59-9-8.29-10.31-14.17-1.65-7.27-.33-14.33,5-20.25,3.74-4.17,8.17-7.27,13.64-8.14a21.47,21.47,0,0,1,17.23,4.46c4.63,3.64,8.07,7.89,8.35,14.07a11.33,11.33,0,0,0,.52,1.89c0.89-2,1.52-3.43,2.19-4.86,1.87-4,3.44-8.11,5.73-11.82,2.48-4,5.67-7.6,8.49-11.41a3.94,3.94,0,0,0,.84-2.14c0-8.23-.08-16.47-0.15-24.7,0-.86-0.07-1.72-0.11-2.66H206.31c0,8,0,15.94,0,23.84,0,0.81-.08,2.07-0.55,2.32a3,3,0,0,1-2.42-.42,31.06,31.06,0,0,0-13.54-4.85c-6.75-.63-13.34-0.76-19.93,1.56a42.91,42.91,0,0,0-10.08,5.13c-4.5,3.07-8.33,6.71-10.62,11.79a1.88,1.88,0,0,1-1.47.92,2.64,2.64,0,0,1-1.66-1c-1.55-2.15-2.72-4.66-4.54-6.53A41.4,41.4,0,0,0,125,23.48a36.43,36.43,0,0,0-13.27-1.88c-4.24.15-8.72,0-12.93,2.07-2.28,1.14-4.76,2-7.06,3.25A40.14,40.14,0,0,0,76.42,42.43c-3.84,6.7-6.62,14-10,20.95A81.79,81.79,0,0,1,60.3,74c-2,2.86-4.21,5.66-7.69,7.08-1.87.76-3.5,2.58-5.36,2.78-6.27.68-12.55,1-18.17-3-5-3.57-8.84-8.21-10.06-14.07-0.9-4.34-1.11-9,1-13.58C22.33,48,25.56,43.85,30.55,41.2c1.5-.79,3.15-1.27,4.67-2,3.74-1.85,7.76-1.3,11.44-.53a21.83,21.83,0,0,1,8.76,4.52c4,3.24,7.35,7.17,7.54,12.8C63,56.74,63.13,57.5,63.21,58.26Z\" transform=\"translate(-1.03 -1.17)\"/>\n        <path d=\"M63.21,58.26C63.13,57.5,63,56.74,63,56c-0.2-5.63-3.54-9.57-7.54-12.8a21.83,21.83,0,0,0-8.76-4.52c-3.67-.77-7.7-1.32-11.44.53-1.52.75-3.18,1.23-4.67,2C25.56,43.85,22.33,48,20,53.12c-2.07,4.54-1.86,9.25-1,13.58,1.22,5.86,5,10.5,10.06,14.07,5.62,4,11.9,3.72,18.17,3,1.86-.2,3.5-2,5.36-2.78,3.47-1.42,5.7-4.22,7.69-7.08a81.79,81.79,0,0,0,6.07-10.58c3.43-6.95,6.21-14.25,10-20.95A40.14,40.14,0,0,1,91.77,26.92c2.3-1.27,4.79-2.11,7.06-3.25,4.21-2.11,8.69-1.92,12.93-2.07A36.43,36.43,0,0,1,125,23.48,41.4,41.4,0,0,1,141.47,33.9c1.82,1.87,3,4.38,4.54,6.53a2.64,2.64,0,0,0,1.66,1,1.88,1.88,0,0,0,1.47-.92c2.28-5.08,6.12-8.72,10.62-11.79a42.91,42.91,0,0,1,10.08-5.13c6.59-2.32,13.18-2.19,19.93-1.56a31.06,31.06,0,0,1,13.54,4.85,3,3,0,0,0,2.42.42c0.47-.25.55-1.51,0.55-2.32,0-7.9,0-15.79,0-23.84h16.11c0,0.94.11,1.8,0.11,2.66,0.07,8.23.15,16.47,0.15,24.7a3.94,3.94,0,0,1-.84,2.14c-2.82,3.81-6,7.4-8.49,11.41-2.29,3.7-3.86,7.85-5.73,11.82-0.67,1.43-1.3,2.87-2.19,4.86a11.33,11.33,0,0,1-.52-1.89c-0.28-6.18-3.73-10.42-8.35-14.07a21.47,21.47,0,0,0-17.23-4.46c-5.47.87-9.91,4-13.64,8.14-5.29,5.91-6.61,13-5,20.25,1.33,5.88,5.13,10.57,10.31,14.17,5.56,3.86,11.69,3.71,17.73,2.89,3.6-.49,6.83-2.86,9.57-5.52a44.13,44.13,0,0,0,10-15.12c2.09-5.06,3.88-10.29,6.5-15.07,4.15-7.56,8.82-14.87,16.45-19.59,2.37-1.47,4.59-3.28,7.13-4.36a37.11,37.11,0,0,1,7.79-1.91,47.43,47.43,0,0,1,16.41.08c2.9,0.48,5.61,2,8.42,3a28.41,28.41,0,0,1,12.17,8.58,61.9,61.9,0,0,1,7.36,10.94c1.27,2.41,1.17,5.5,2.14,8.13a24.13,24.13,0,0,1,1.4,11.07,17.66,17.66,0,0,1-1.5,4.75,2,2,0,0,1-1.56.76q-26.27,0-52.54-.17c-1,0-1.92,0-2.88.07-2.17.14-3,1.62-1.7,3.34,3.29,4.27,6.94,7.92,12.24,10,4.52,1.8,9,1.41,13.32.87,2.71-.33,5.35-2.35,7.7-4a3.45,3.45,0,0,1,4.67,0c3.34,2.5,6.57,5.15,10,7.54,1.62,1.13,1.36,2,.14,3-2.75,2.18-5.46,4.45-8.39,6.37-1.46,1-3.38,1.22-5.09,1.78-3.29,1.07-6.53,2.63-9.9,3.05s-7.07,1.4-10.4-.71a3.16,3.16,0,0,0-1.37-.38c-8.56-.78-15.41-4.84-21.22-11a23.06,23.06,0,0,0-2-2c-1.93-1.58-2.82-2.88-.92-5.49a70.74,70.74,0,0,0,6.26-11.26c1.45-3,2.33-6.33,3.65-9.43a62,62,0,0,1,3.78-7.35,3.12,3.12,0,0,1,2.34-.8c11.43,0,22.87.16,34.3,0.22a2.16,2.16,0,0,0,1.65-.55,2.39,2.39,0,0,0-.2-2c-2.89-4.18-6.2-8.05-10.8-10.36a20.9,20.9,0,0,0-15.07-1.74,24.13,24.13,0,0,0-14.81,11.59c-2,3.64-4.29,7.14-6.1,10.87-1.49,3.09-2.29,6.51-3.72,9.63a89.15,89.15,0,0,1-5.2,9.79,49.58,49.58,0,0,1-12.77,13.68c-2.5,1.86-5.7,2.74-8.38,4.39-2.52,1.55-5.54.83-7.9,2a13.06,13.06,0,0,1-7.92,1.07c-4.25-.61-8.58-1.1-12.57-3-1.71-.82-3.83-0.88-5.37-1.89-4.65-3.05-9.47-6.07-12.51-10.9C148.9,82,147,78,144.89,74a3.76,3.76,0,0,1-.32-1.38c-0.25-2.56-1.16-3.32-3.83-3.31Q119,69.4,97.3,69.41a28.33,28.33,0,0,0-3.35.08c-0.73.09-2,.39-2,0.73a4.51,4.51,0,0,0,.49,2.89c3.38,5.09,8,9,13.82,10.48,4.27,1.07,9.09,1.66,13.43-.75,2.23-1.24,4.39-2.65,6.71-3.68a3.88,3.88,0,0,1,3.22.17c3.75,2.59,7.38,5.36,10.93,8.22a2.4,2.4,0,0,1-.07,2.32c-2.31,1.89-4.79,3.58-7.24,5.29a23.32,23.32,0,0,1-4.74,3.05,55.08,55.08,0,0,1-7.37,1.83c-3.8.86-7.56,2.4-11.53,1.56a98.06,98.06,0,0,1-10.69-2.85,27.51,27.51,0,0,1-7.31-3.4C88,92.8,84.72,89.78,81.37,86.92a24.88,24.88,0,0,1-2-2.12c1.83-3.3,3.72-6.44,5.35-9.72S87.65,68.35,89.17,65c1.68-3.71,3.32-7.45,5.24-11,0.36-.67,2-1,3-1,11.36,0,22.71.12,34.07,0.18,1.57,0,2.27-1.12,1.33-2.36-3.67-4.85-7.4-9.36-13.67-11.48a25.52,25.52,0,0,0-11.44-.91c-2.85.33-5.71,2-8.19,3.7C93.32,46.3,89.91,52.64,87,59.23c-2.73,6.08-5.19,12.29-8.22,18.22-3.52,6.9-8.9,12.41-15,17.09-2.33,1.79-5.53,2.41-8.05,4s-5.54.79-7.88,1.94a13,13,0,0,1-7.58,1.11c-4.34-.52-8.72-1.14-12.76-3-1.42-.67-3-1.07-4.4-1.71A31.44,31.44,0,0,1,9.4,85.48C7,81.9,5.23,78,3.18,74.18A1.41,1.41,0,0,1,3,73.74C2.35,69.35,1.2,65,1.15,60.56,0.94,41.76,1.06,23,1.06,4.16c0-.94,0-1.88,0-3H18.42c0,8.12,0,16.1,0,24.07a2.68,2.68,0,0,0,.73,2c0.47,0.25,1.45-.2,2.09-0.55a41.48,41.48,0,0,1,4.11-2.48,35.29,35.29,0,0,1,6.48-2c6.56-1.27,13.2-.81,19.75,0,2.3,0.28,4.51,1.77,6.64,2.94a65.1,65.1,0,0,1,8.55,5.19,50.35,50.35,0,0,1,6.4,6.42,2.4,2.4,0,0,1,.35,2.23c-4.21,5.63-6.64,12.13-9.31,18.52a4.46,4.46,0,0,1-.49.73Z\" transform=\"translate(-1.03 -1.17)\"/>\n      </g>\n    </svg>\n  )\n}\n","import React, { Component } from 'react'\nimport PostedBets from './PostedBets'\nimport Logo from './Logo'\n\nexport default class Options extends Component {\n  state = {\n    dropdownVisible: false\n  }\n\n  toggleDropDown = () => this.setState({ dropdownVisible: !this.state.dropdownVisible })\n\n  render() {\n    return(\n      <nav className=\"btn__nav-group\">\n        <figure className=\"btn__nav-group__branding\">\n          <Logo />\n        </figure>\n        { this.props.oddsFormat === 'FRACTIONAL' ? (<button onClick={ () => this.props.onViewAsDecimalClick() } className=\"btn\">Show decimal odds</button>)\n                                                 : (<button onClick={ () => this.props.onViewAsFractionalClick() } className=\"btn\">Show fractional odds</button>)}\n        <button onClick={ this.toggleDropDown } className=\"btn btn--request\">View Bet history</button>\n        <PostedBets\n          dropdownVisible={ this.state.dropdownVisible }\n          postedBets={ this.props.postedBets }\n          oddsFormat={ this.props.oddsFormat }\n        />\n      </nav>\n    )\n  }\n}\n","import React from 'react'\nimport { oddsFormatter, payoutCalculator } from '../helpers'\n/**\n * FIXME: this isn't working. `state.postedBets` looks fine, new bets are being\n * created without any issue. `postedBet.get('transaction_id')` works perfectly.\n * All the rest return undefined values; the values are there, I can see them if I inspect\n * the state, but they aren't rendering out.\n */\n\nexport default function PostedBet({ oddsFormat, postedBet }) {\n  return (\n    <li className=\"posted-bet\">\n      <p>Transaction ID <strong>{ postedBet.get('transaction_id') }</strong></p>\n      <p>{ postedBet.get('event') } to win { postedBet.get('name') }</p>\n      <p>Odds: <strong>{ oddsFormatter(oddsFormat, postedBet.getIn(['odds', 'numerator']), postedBet.getIn(['odds', 'denominator'])) }</strong></p>\n      <p>Expected return: <strong>£{ payoutCalculator(postedBet.get('stake'), postedBet.getIn(['odds', 'numerator']), postedBet.getIn(['odds', 'denominator'])) }</strong></p>\n    </li>\n  )\n}\n","import React from 'react'\nimport PostedBet from './PostedBet'\n\nexport default function PostedBets({ dropdownVisible, postedBets, oddsFormat }) {\n  const visibleClass = dropdownVisible ? 'visible' : 'hidden'\n  return (\n    <section className={ `posted-bets__dropdown posted-bets__dropdown--${visibleClass}` }>\n      <h1 className=\"posted-bets__header\">Bet history (from most recent)</h1>\n      <ul className=\"posted-bets\">\n        { do { if(postedBets.size === 0) (<li><strong>No recent bets</strong></li>) }}\n        { postedBets.keySeq().map(id => (\n          <PostedBet\n            key={ id }\n            postedBet={ postedBets.get(id) }\n            oddsFormat={ oddsFormat }\n          />\n        ))}\n      </ul>\n    </section>\n  )\n}\n","import React from 'react'\nimport SlipBet from './SlipBet'\nimport Flash from './Flash'\n\nexport default function Slip({ slipBets, status, oddsFormat, onUnsetSlipBetClick, onClearSlipBetsClick, onSetStakeClick, onPostBetsClick }) {\n  const indicateSubmit = do { if(slipBets.size > 0) 'pulse' }\n  return (\n    <section className=\"betting-app__main-section betting-app__slip\">\n      <ul className=\"bets\">\n      <Flash status={ status } />\n      { slipBets.size === 0 ? (<li className=\"notabet\"><p>No bets on your slip.</p></li>)\n                            : slipBets.keySeq().map(betID => (\n        <SlipBet\n          key={ betID }\n          slipBet={ slipBets.get(betID) }\n          oddsFormat={ oddsFormat }\n          onUnsetSlipBetClick={ () => onUnsetSlipBetClick(betID) }\n          onSetStakeClick={ onSetStakeClick }\n        />\n      ))}\n      </ul>\n      { do { if( slipBets.size > 0) {(\n        <div className=\"btn__group bet__controls\">\n          <button className=\"btn bet__control\" onClick={ onClearSlipBetsClick }>Clear all bets on slip</button>\n          <button className={ `btn btn--request bet__control ${indicateSubmit}` }  onClick={ () => onPostBetsClick(slipBets) }>Submit these bets</button>\n        </div>\n      )}}}\n    </section>\n  )\n}\n","import React, { Component } from 'react'\nimport { payoutCalculator, oddsFormatter } from '../helpers'\n\nexport default class SlipBet extends Component {\n  state = {\n    stake: this.props.slipBet.get('stake'),\n    payout: 0\n  }\n\n  handleStakeChange = (e) => this.setState({\n    stake: e.target.value,\n    payout: payoutCalculator(e.target.value, this.props.slipBet.getIn(['odds', 'numerator']), this.props.slipBet.getIn(['odds', 'denominator']))\n  })\n\n  render() {\n    // I'm doing zero validation, just shoving a class on to indicate bets are submittable.\n    // Nothing will go wrong if the bets are submitted with a stake of 0, so v0v\n    // NOTE: it checks **props** NOT **component state**, props must be nonzero to bet.\n    const submittableClass = this.props.slipBet.get('stake') > 0 ? 'bet--submittable' : 'bet--unsubmittable'\n    const odds = oddsFormatter(this.props.oddsFormat, this.props.slipBet.getIn(['odds', 'numerator']), this.props.slipBet.getIn(['odds', 'denominator']))\n\n    return (\n      <li className={ `bet bet--onslip ${submittableClass}` }>\n        <div className=\"bet__text\">\n          <p className=\"bet__reminder\"><strong className=\"bet__name\">{ this.props.slipBet.get('name') }</strong> to win the <strong className=\"bet__event\">{ this.props.slipBet.get('event') }</strong> at <strong className=\"bet__odds\">{ odds }</strong></p>\n          <p className=\"bet__stake\">A bet of <strong>£<input className=\"text-input bet__stake__input\" onBlur={ () => this.props.onSetStakeClick(this.props.slipBet.get('bet_id'), this.state.stake) } onChange={ this.handleStakeChange } value={ this.state.stake } /></strong> nets you <strong className=\"bet__payout\">£{ this.state.payout }</strong></p>\n        </div>\n        <div className=\"btn__group bet__controls\">\n          <button className=\"btn bet__control\" onClick={ this.props.onUnsetSlipBetClick }>Remove bet from slip</button>\n          <button className=\"btn btn--request bet__control\" onClick={ () => this.props.onSetStakeClick(this.props.slipBet.get('bet_id'), this.state.stake) } >Set stake</button>\n        </div>\n      </li>\n    )\n  }\n}\n","export const FETCH_BETS_REQUEST = 'FETCH_BETS_REQUEST'\nexport const FETCH_BETS_ERROR = 'FETCH_BETS_ERROR'\nexport const FETCH_BETS_SUCCESS = 'FETCH_BETS_SUCCESS'\n\nexport const SET_SLIP_BET = 'SET_SLIP_BET'\nexport const UNSET_SLIP_BET = 'UNSET_SLIP_BET'\nexport const CLEAR_SLIP_BETS = 'CLEAR_SLIP_BETS'\n\nexport const SET_STAKE = 'SET_STAKE'\n\nexport const POST_BET_REQUEST = 'POST_BET_REQUEST'\nexport const POST_BET_ERROR = 'POST_BET_ERROR'\nexport const POST_BET_SUCCESS = 'POST_BET_SUCCESS'\n\nexport const VIEW_AS_DECIMAL = 'VIEW_AS_DECIMAL'\nexport const VIEW_AS_FRACTIONAL = 'VIEW_AS_FRACTIONAL'\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport Bets from '../components/Bets'\nimport { fetchBets } from '../actions/fetchBets'\nimport { setSlipBet } from '../actions/slipBets'\n\nconst mapStateToProps = (state) => {\n  return {\n    bets: state.bets.filterNot((bet, betID) => state.slipBets.keySeq().includes(betID)),\n    oddsFormat: state.oddsFormat,\n    status: state.status\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onLoadBetsClick: () => dispatch(fetchBets()),\n    onSetSlipBetClick: (id, value) => dispatch(setSlipBet(id, value))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Bets)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { viewAsFractional, viewAsDecimal } from '../actions/oddsFormat'\nimport Options from '../components/Options'\n\nconst mapStateToProps = (state) => {\n  return {\n    oddsFormat: state.oddsFormat,\n    postedBets: state.postedBets\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onViewAsFractionalClick: () => dispatch(viewAsFractional()),\n    onViewAsDecimalClick: () => dispatch(viewAsDecimal())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Options)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport Slip from '../components/Slip'\nimport { unsetSlipBet, clearSlipBets, setStake } from '../actions/slipBets'\nimport { postBets } from '../actions/postBets'\n\nconst mapStateToProps = (state) => {\n  return {\n    oddsFormat: state.oddsFormat,\n    slipBets: state.slipBets,\n    status: state.status\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onClearSlipBetsClick: () => dispatch(clearSlipBets()),\n    onUnsetSlipBetClick: (id) => dispatch(unsetSlipBet(id)),\n    onSetStakeClick: (id, value) => dispatch(setStake(id, value)),\n    onPostBetsClick: (slipBets) => dispatch(postBets(slipBets))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Slip)\n","/**\n * The promise returned from `fetch()` does not reject on HTTP error status.\n * ∴ a handler function must be provided: errors need to be displayed.\n */\nexport function checkStatus(response) {\n  if (response.status >= 200 && response.status < 300) {\n    return response\n  } else {\n    const error = new Error(response.statusText)\n    error.response = response\n    throw error\n  }\n}\n\n/** JSON is expected as a response. */\nexport function parseJSON(response) {\n  return response.json()\n}\n\n/* Calculate a payout based on fractional odds.\n * NOTE: the stake comes via an input; it needs to be coerced to a number. */\nexport function payoutCalculator(stake, numerator, denominator) {\n  const calc = ((numerator / denominator) * Number(stake)) + Number(stake)\n  return calc.toFixed(2)\n}\n\n\nexport function oddsFormatter(format, numerator, denominator) {\n  return new Map([\n    ['FRACTIONAL', `${numerator}-${denominator}`],\n    /* NOTE: the `number` wrapping the calculation is to remove trailing zeroes */\n    ['DECIMAL', `${Number((numerator / denominator + 1).toFixed(2))}`]\n  ]).get(format)\n}\n","import ReactDOM from 'react-dom'\nimport React from 'react'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport createLogger from 'redux-logger'\nimport reducer from './reducers'\nimport App from 'components/App'\n\nconst logger = createLogger()\nconst store = createStore(reducer, applyMiddleware(thunk, logger))\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.querySelector('#root')\n  )\n})\n","import Immutable from 'immutable'\nimport { FETCH_BETS_REQUEST, FETCH_BETS_SUCCESS, FETCH_BETS_ERROR } from '../constants/actionTypes'\nimport { fetchBets } from '../actions/fetchBets'\n\n/**\n * Fetched from the API, bets are in the form of an array.\n * Assuming the JSON has already been parsed, reduce this\n * array to an immutable Map keyed by `bet_id`.\n */\nfunction normaliseAndPetrify(bets) {\n  const betsMap = new Map(bets.reduce((map, bet) => [...map, [bet.bet_id, bet]], []))\n  return Immutable.fromJS(betsMap)\n}\n\nexport default function bets(state = Immutable.Map(), action) {\n  switch(action.type) {\n    case FETCH_BETS_REQUEST:\n      return state\n    case FETCH_BETS_SUCCESS:\n      return state.merge(normaliseAndPetrify(action.bets))\n    case FETCH_BETS_ERROR:\n      return state\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\nimport bets from './bets'\nimport slipBets from './slipBets'\nimport oddsFormat from './oddsFormat'\nimport postedBets from './postedBets'\nimport status from './status'\n\nexport default combineReducers({ bets, slipBets, oddsFormat, postedBets, status })\n","import Immutable from 'immutable'\nimport { POST_BET_REQUEST, POST_BET_ERROR, POST_BET_SUCCESS } from '../constants/actionTypes'\n\nfunction preparePostData(slipBets) {\n  return [...slipBets.keys()].map(betID => {\n    return {\n      'bet_id': slipBets.getIn([betID, 'bet_id']),\n      'odds': {\n        'numerator': slipBets.getIn([betID, 'odds', 'numerator']),\n        'denominator': slipBets.getIn([betID, 'odds', 'denominator'])\n      },\n      'stake': slipBets.getIn([betID, 'stake'])\n    }\n  })\n}\n\nexport default function postedBets(state = Immutable.Map(), action) {\n  switch(action.type) {\n    case POST_BET_REQUEST:\n      return state\n    case POST_BET_SUCCESS:\n      const mapID = action.parsedResponse['transaction_id']\n      return state.set(mapID, Immutable.Map(action.parsedResponse))\n    case POST_BET_ERROR:\n      return state\n    default:\n      return state\n  }\n}\n","import Immutable from 'immutable'\nimport { FETCH_BETS_REQUEST, FETCH_BETS_SUCCESS, FETCH_BETS_ERROR, POST_BET_REQUEST, POST_BET_ERROR, POST_BET_SUCCESS } from '../constants/actionTypes'\n\nconst initialState = Immutable.Map([\n  ['loading', false],\n  ['loaded', false],\n  ['loadError', false],\n  ['posted', false],\n  ['postError', false]\n])\n\nexport default function status(state = initialState, action) {\n  switch(action.type) {\n    case FETCH_BETS_REQUEST:\n      return state.set('loading', true)\n    case FETCH_BETS_SUCCESS:\n      return state.set('loading', false).set('loaded', true)\n    case FETCH_BETS_ERROR:\n      return state.set('loading', false).set('loadError', true)\n    case POST_BET_REQUEST:\n      return state.set('posted', false).set('postError', false)\n    case POST_BET_SUCCESS:\n      return state.set('posted', true)\n    case POST_BET_ERROR:\n      return state.set('postError', true)\n    default:\n      return state\n  }\n}\n"]}